#
# Made with all the love in the world
# by scireum in Remshalden, Germany
#
# Copyright by scireum GmbH
# http://www.scireum.de - info@scireum.de
#

# Contains product specific information. This should most probably be overridden in the application.conf
# or can be controlled via the build.xml script.
product {

    # Contains the name of the product
    name = "SIRIUS"

    # Contains the current version of the product
    # This will be replaced by the build.xml
    version = "@VERSION@"

    # Contains the current build number
    # This will be replaced by the build.xml
    build = "@BUILD@"

    # Contains the build date
    # This will be replaced by the build.xml
    date = "@DATE@"

    # Contains the current vcs revision
    # This will be replaced by the build.xml
    vcs = "@VCS@"

}

# Contains framework specific information
sirius {

    # Sets the node name of this instance. This should be setup in the instance.conf. If the value is empty,
    # the current hostname is used.
    nodeName = ""

    # Opening a connection on this port will force the sirius app to terminate
    shutdownPort = 9191

    # Modules can be split into frameworks which can be disabled if not needed.
    # The kernel itself provides the TimerService which calls participants in regular intervals. This can
    # be disabled via the kernel.timer framework.
    frameworks {
        kernel.timer = true
    }

    # By default no customizations are active. This can be used to enable one or more customizations.
    # This will enable classes in "customizations.[name]" as well as resources in "customizations/[name]/resource-path".
    # This can be used to ajust small pieces of the software for multiple customers while maintaining a single
    # consistent codebase.
    customizations = []

}

# Contains the configuration of the native language support
nls {

    # Sets the default language as two-letter code
    defaultLanguage = en

    # Enumerates all supported languages as two-letter codes
    languages = [ en, de ]
}

# Sets the logging configuration. Each logger can be enumerated here, along with its log level
# This can be OFF, DEBUG, INFO, WARN, ERROR - the default level is INFO
logging {
    # Turn this on to log "ignored" or unnecessary exceptions.
    ignored = OFF
}

# Contains configuration regarding the health system
health {
    # Controls the max numbers of errors kept in the MemoryBasedHealthMonitor
    max-errors = 100

    # Controls the max number of log messages kept in the MemoryBasedHealthMonitor
    max-logs = 100
}

# Sets up the caching system
cache {

    # Default settings applied to each cache if not further specified
    default {
        # Determines the maximal number of entries in the cache
        maxSize = 100

        # Determines the maximal time to live for a cached object. After this period, the entry will be evicted.
        ttl = 1 hour

        # If the cache can verify values, this determines the interval after which a value needs to be verified
        # before it is served to the requestor.
        verification = 1 hour
    }

}

# Sets of the async execution system
async.executor {

    # Default settings applied to each executor if not further specified
    default {
        # Max number of parallel threads used by this executor
        poolSize = 20

        # Max number of tasks queued if all threads are busy. If the queue length is reached, the executor will
        # either block the caller and execute tasks at the callsite or it will drop the task and not do anything
        # at all (if a drop handler for this task is present). If a value of 0 is specified an unbounded
        # queue is used.
        queueLength = 200
    }

    # We only need one timer at a time and prefer to lock the timer instead of starting anything in parallel or
    # queueing stuff up
    timer {
        poolSize = 1
        queueLength = 0
    }

}